{"version":3,"file":"static/js/878.b3a66431.chunk.js","mappings":";gVAEaA,EAAUC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kPAcpBC,EAAUH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qNAepBG,EAASL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,iIASnBK,EAAQP,EAAAA,GAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,iTAkBjBO,EAAOT,EAAAA,GAAAA,GAASU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,oEAMhBS,EAAWX,EAAAA,GAAAA,GAASY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,2IAWpBW,EAAYb,EAAAA,GAAAA,EAAQc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,+QAgBpBa,EAAaf,EAAAA,GAAAA,KAAWgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,+BAIxBe,EAAajB,EAAAA,GAAAA,GAASkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,kJAYtBiB,EAAWnB,EAAAA,GAAAA,IAAUoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,kMCzFrBmB,EAAa,SAAHC,GAAyD,IAADC,EAAAD,EAAlDE,aAAAA,OAAY,IAAAD,EAAG,CAAC,EAACA,EAAAE,EAAAH,EAAEI,oBAAAA,OAAmB,IAAAD,EAAG,CAAC,EAACA,EACtEE,EAkBIH,EAjBFI,MAAAA,OAAK,IAAAD,EAAG,GAAEA,EAAAE,EAiBRL,EAhBFM,SAAAA,OAAQ,IAAAD,EAAG,GAAEA,EAAAE,EAgBXP,EAfFQ,YAAAA,OAAW,IAAAD,EAAG,GAAEA,EAAAE,EAedT,EAdFU,eAAAA,OAAc,IAAAD,EAAG,GAAEA,EAAAE,EAcjBX,EAbFY,OAAAA,OAAM,IAAAD,EAAG,GAAEA,EAAAE,EAaTb,EAZFc,MAAAA,OAAK,IAAAD,GAAQA,EAAAE,EAYXf,EAXFgB,kBAAAA,OAAiB,IAAAD,EAAG,GAAEA,EAAAE,EAWpBjB,EAVFkB,SAAAA,OAAQ,IAAAD,EAAG,GAAEA,EAAAE,EAUXnB,EATFoB,qBAAAA,OAAoB,IAAAD,EAAG,GAAEA,EAAAE,EASvBrB,EARFsB,qBAAAA,OAAoB,IAAAD,EAAG,GAAEA,EACzBE,EAOEvB,EAPFuB,aAAYC,EAOVxB,EANFyB,QAAAA,OAAO,IAAAD,EAAG,GAAEA,EAAAE,EAMV1B,EALF2B,OAAAA,OAAM,IAAAD,EAAG,GAAEA,EAAAE,EAKT5B,EAJF6B,QAAAA,OAAO,IAAAD,EAAG,GAAEA,EAAAE,EAIV9B,EAHF+B,WAAAA,OAAU,IAAAD,EAAG,EAACA,EAAAE,EAGZhC,EAFFiC,aAAAA,OAAY,IAAAD,EAAG,EAACA,EAAAE,EAEdlC,EADFmC,WAAAA,OAAU,IAAAD,EAAG,EAACA,EAEhBE,EAA2ClC,EAAnCmC,QAAAA,QAAO,IAAAD,EAAG,GAAEA,EAAAE,GAAuBpC,EAArBqC,YAChBC,SAD2B,IAAAF,GAAG,GAAEA,IACP,GACzBG,GAAO,IAAIC,KAAKnB,GAChBoB,GAAcF,GAAKG,eAAe,QAAS,CAC/CC,KAAM,UACNC,MAAO,OACPC,IAAK,YAEDC,GAAcP,GAAKQ,eAAiB,KACpCC,GAAY1C,EAAW,GAAA2C,OACtBd,GAAO,KAAAc,OAAIX,GAAU,KAAAW,OAAI3C,GAC5B4C,EACEC,GAAkBtB,EAAWuB,QAAQ,GACrCC,GAActB,EAAaqB,QAAQ,GAEzC,OACEE,EAAAA,EAAAA,MAACjF,EAAO,CAAAkF,SAAA,EACND,EAAAA,EAAAA,MAACzE,EAAK,CAAA0E,SAAA,CACHrD,EAAM,IAAE4C,KAAeQ,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAM,IAAET,GAAY,WAG9CQ,EAAAA,EAAAA,MAAC7E,EAAO,CAAA8E,SAAA,EACNC,EAAAA,EAAAA,KAAC7E,EAAM,CACL8E,IAAKT,GACLU,IAAG,wBAAAT,OAA0B/C,GAC7ByD,MAAOrB,GACPsB,OAAQ,OAGVN,EAAAA,EAAAA,MAACvE,EAAI,CAAAwE,SAAA,EACHC,EAAAA,EAAAA,KAACvE,EAAQ,CAAAsE,SACNvC,IACCsC,EAAAA,EAAAA,MAACnE,EAAS,CACR0E,KAAM7C,EACN8C,OAAO,SACPC,IAAI,sBAAqBR,SAAA,CAC1B,aACUC,EAAAA,EAAAA,KAACQ,EAAAA,IAAc,UAI9BV,EAAAA,EAAAA,MAACrE,EAAQ,CAAAsE,SAAA,CAAC,oBACQC,EAAAA,EAAAA,KAACnE,EAAU,CAAAkE,SAAE/C,OAE9BE,EAAOuD,OAAS,IACfX,EAAAA,EAAAA,MAACrE,EAAQ,CAAAsE,SAAA,EACPC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,aACHC,EAAAA,EAAAA,KAACjE,EAAU,CAAAgE,SACR7C,EAAOwD,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAAI,OACrBb,EAAAA,EAAAA,KAAA,MAAAD,SAAcc,GAALD,EAAe,SAK/B7C,EAAU,IACT+B,EAAAA,EAAAA,MAACrE,EAAQ,CAAAsE,SAAA,CAAC,aACCD,EAAAA,EAAAA,MAACjE,EAAU,CAAAkE,SAAA,CAAEhC,EAAQ,iBAGjCX,IACC0C,EAAAA,EAAAA,MAACrE,EAAQ,CAAAsE,SAAA,CAAC,WACDC,EAAAA,EAAAA,KAACnE,EAAU,CAAAkE,SAAC,YAGvBD,EAAAA,EAAAA,MAACrE,EAAQ,CAAAsE,SAAA,CAAC,uBACWC,EAAAA,EAAAA,KAACnE,EAAU,CAAAkE,SAAEzC,OAEjB,iBAAhB2B,KACCa,EAAAA,EAAAA,MAACrE,EAAQ,CAAAsE,SAAA,CAAC,kBACMC,EAAAA,EAAAA,KAACnE,EAAU,CAAAkE,SAAEd,QAG9BvB,EAAqB+C,OAAS,IAC7BX,EAAAA,EAAAA,MAACrE,EAAQ,CAAAsE,SAAA,EACPC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2BACHC,EAAAA,EAAAA,KAACjE,EAAU,CAAAgE,SACRrC,EAAqBgD,KAAI,SAAAI,GAAA,IAAGC,EAAUD,EAAVC,WAAYF,EAAIC,EAAJD,KAAI,OAC3Cb,EAAAA,EAAAA,KAAA,MAAAD,SAAsBc,GAAbE,EAAuB,SAKvCnD,EAAqB6C,OAAS,IAC7BX,EAAAA,EAAAA,MAACrE,EAAQ,CAAAsE,SAAA,EACPC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2BACHC,EAAAA,EAAAA,KAACjE,EAAU,CAAAgE,SACRnC,EAAqB8C,KAAI,SAAAM,GAAA,IAAGJ,EAAEI,EAAFJ,GAAIC,EAAIG,EAAJH,KAAI,OACnCb,EAAAA,EAAAA,KAAA,MAAAD,SAAcc,GAALD,EAAe,SAK/B3C,EAAS,IACR6B,EAAAA,EAAAA,MAACrE,EAAQ,CAAAsE,SAAA,CAAC,YACAD,EAAAA,EAAAA,MAACjE,EAAU,CAAAkE,SAAA,CAAC,IAAE9B,QAGzBE,EAAU,IACT2B,EAAAA,EAAAA,MAACrE,EAAQ,CAAAsE,SAAA,CAAC,aACCD,EAAAA,EAAAA,MAACjE,EAAU,CAAAkE,SAAA,CAAC,IAAE5B,SAG3B2B,EAAAA,EAAAA,MAACrE,EAAQ,CAAAsE,SAAA,CAAC,gBACIC,EAAAA,EAAAA,KAACnE,EAAU,CAAAkE,SAAEJ,SAE3BG,EAAAA,EAAAA,MAACrE,EAAQ,CAAAsE,SAAA,CAAC,kBACMC,EAAAA,EAAAA,KAACnE,EAAU,CAAAkE,SAAEF,SAE7BC,EAAAA,EAAAA,MAACrE,EAAQ,CAAAsE,SAAA,CAAC,gBACIC,EAAAA,EAAAA,KAACnE,EAAU,CAAAkE,SAAEtB,QAE3BuB,EAAAA,EAAAA,KAACvE,EAAQ,CAAAsE,UACPC,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CACLC,UAAU,EACVC,KAAM,GACNC,cAAe7C,EACf8C,aACErB,EAAAA,EAAAA,KAACsB,EAAAA,IAAa,CAACC,MAAM,oBAAoBC,KAAM,KAEjDC,YAAYzB,EAAAA,EAAAA,KAAC0B,EAAAA,IAAa,CAACH,MAAM,oBAAoBC,KAAM,eAMlE5E,IACCkD,EAAAA,EAAAA,MAAC7D,EAAQ,CAAA8D,SAAA,EACPC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cACHC,EAAAA,EAAAA,KAACnE,EAAU,CAAAkE,SAAEnD,SAKvB,YCxKa3B,EAAUH,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uVAoBpBK,EAAQP,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yDAMhB2G,EAAQ7G,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,4BAIjB4G,EAAY9G,EAAAA,GAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,yIAUrB6G,GAAgB/G,EAAAA,EAAAA,IAAOgH,EAAAA,GAAPhH,CAAeU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,0rBCnC/B+G,EAAuB,SAAH3F,GAA2B,IAAD4F,EAAA5F,EAApB6F,SAAAA,OAAQ,IAAAD,EAAG,CAAC,EAACA,EAClD,OACElC,EAAAA,EAAAA,MAAC7E,EAAO,CAAA8E,SAAA,EACNC,EAAAA,EAAAA,KAAC3E,EAAK,CAAA0E,SAAC,4BAEPD,EAAAA,EAAAA,MAAC6B,EAAK,CAAA5B,SAAA,EACJC,EAAAA,EAAAA,KAAC4B,EAAS,CAAA7B,UACRC,EAAAA,EAAAA,KAAC6B,EAAa,CAACK,GAAG,OAAOC,MAAO,CAAEC,KAAMH,GAAWlC,SAAC,qBAItDC,EAAAA,EAAAA,KAAC4B,EAAS,CAAA7B,UACRC,EAAAA,EAAAA,KAAC6B,EAAa,CAACK,GAAG,UAAUC,MAAO,CAAEC,KAAMH,GAAWlC,SAAC,wBAOjE,YCxBasC,GAAavH,EAAAA,EAAAA,IAAOwH,EAAAA,GAAPxH,CAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,g3BCCzBuH,EAAa,WAAO,IAADC,EAAAC,EAExBC,EAAmC,QAAvBF,EAAiB,QAAjBC,GADDE,EAAAA,EAAAA,MACaR,aAAK,IAAAM,OAAA,EAAdA,EAAgBL,YAAI,IAAAI,EAAAA,EAAI,IAE7C,OACE1C,EAAAA,EAAAA,MAACuC,EAAU,CAACH,GAAIQ,EAAa3C,SAAA,EAC3BC,EAAAA,EAAAA,KAAC4C,EAAAA,IAAW,CAACpB,KAAM,KAAM,oBAG/B,0BCZAqB,GAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAX,IAAA,UAAAY,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAnB,EAAAmB,EAAAzB,GAAA,8BAAA0B,EAAAnC,OAAAoC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAtC,GAAAG,EAAAyB,KAAAU,EAAA5B,KAAAyB,EAAAG,GAAA,IAAAE,EAAAN,EAAAhC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAa,GAAA,SAAAM,EAAA1C,GAAA,0BAAA2C,SAAA,SAAA5C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA4C,QAAA7C,EAAAC,EAAA,gBAAA6C,EAAA7C,EAAAD,GAAA,SAAA+C,EAAA7C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,iBAAAA,GAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAgD,QAAAjB,EAAAkB,SAAAC,MAAA,SAAAjD,GAAA8C,EAAA,OAAA9C,EAAAS,EAAAE,EAAA,aAAAX,GAAA8C,EAAA,QAAA9C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAgD,QAAAjB,GAAAmB,MAAA,SAAAjD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA8C,EAAA,QAAA9C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAA8C,IAAA,WAAAnD,GAAA,SAAAA,EAAAE,GAAA6C,EAAA9C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAgD,KAAAC,EAAAA,GAAAA,GAAA,aAAAzB,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAAyB,EAAA,UAAAoB,MAAA,mCAAA7C,IAAA0B,EAAA,cAAAvB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAoD,MAAA,OAAAhD,EAAAiD,OAAA5C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAkD,SAAA,GAAAzC,EAAA,KAAAE,EAAAwC,EAAA1C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAkB,EAAA,gBAAAlB,CAAA,cAAAX,EAAAiD,OAAAjD,EAAAoD,KAAApD,EAAAqD,MAAArD,EAAAwB,SAAA,aAAAxB,EAAAiD,OAAA,IAAA/C,IAAAwB,EAAA,MAAAxB,EAAA0B,EAAA5B,EAAAwB,IAAAxB,EAAAsD,kBAAAtD,EAAAwB,IAAA,gBAAAxB,EAAAiD,QAAAjD,EAAAuD,OAAA,SAAAvD,EAAAwB,KAAAtB,EAAAyB,EAAA,IAAAK,EAAAV,EAAA3B,EAAAE,EAAAG,GAAA,cAAAgC,EAAAT,KAAA,IAAArB,EAAAF,EAAAgD,KAAApB,EAAA,iBAAAI,EAAAR,MAAAK,EAAA,gBAAAzB,MAAA4B,EAAAR,IAAAwB,KAAAhD,EAAAgD,KAAA,WAAAhB,EAAAT,OAAArB,EAAA0B,EAAA5B,EAAAiD,OAAA,QAAAjD,EAAAwB,IAAAQ,EAAAR,IAAA,YAAA2B,EAAAxD,EAAAE,GAAA,IAAAG,EAAAH,EAAAoD,OAAA/C,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAqD,SAAA,eAAAlD,GAAAL,EAAAa,SAAAgD,SAAA3D,EAAAoD,OAAA,SAAApD,EAAA2B,IAAA5B,EAAAuD,EAAAxD,EAAAE,GAAA,UAAAA,EAAAoD,SAAA,WAAAjD,IAAAH,EAAAoD,OAAA,QAAApD,EAAA2B,IAAA,IAAAiC,UAAA,oCAAAzD,EAAA,aAAA6B,EAAA,IAAAxB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAoD,OAAA,QAAApD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAqD,SAAA,KAAArB,EAAA,IAAAtB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAAyC,MAAAnD,EAAAF,EAAA+D,YAAAnD,EAAAH,MAAAP,EAAA8D,KAAAhE,EAAAiE,QAAA,WAAA/D,EAAAoD,SAAApD,EAAAoD,OAAA,OAAApD,EAAA2B,IAAA5B,GAAAC,EAAAqD,SAAA,KAAArB,GAAAtB,GAAAV,EAAAoD,OAAA,QAAApD,EAAA2B,IAAA,IAAAiC,UAAA,oCAAA5D,EAAAqD,SAAA,KAAArB,EAAA,UAAAgC,EAAAjE,GAAA,IAAAD,EAAA,CAAAmE,OAAAlE,EAAA,SAAAA,IAAAD,EAAAoE,SAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,WAAApE,EAAA,GAAAD,EAAAsE,SAAArE,EAAA,SAAAsE,WAAAC,KAAAxE,EAAA,UAAAyE,EAAAxE,GAAA,IAAAD,EAAAC,EAAAyE,YAAA,GAAA1E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAAyE,WAAA1E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAsE,WAAA,EAAAJ,OAAA,SAAAlE,EAAA2C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAAzC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAgE,KAAA,OAAAhE,EAAA,IAAA4E,MAAA5E,EAAArC,QAAA,KAAA4C,GAAA,EAAAG,EAAA,SAAAsD,IAAA,OAAAzD,EAAAP,EAAArC,QAAA,GAAA0C,EAAAyB,KAAA9B,EAAAO,GAAA,OAAAyD,EAAAvD,MAAAT,EAAAO,GAAAyD,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAvD,MAAAR,EAAA+D,EAAAX,MAAA,EAAAW,CAAA,SAAAtD,EAAAsD,KAAAtD,CAAA,YAAAoD,iBAAA9D,EAAA,2BAAAmC,EAAA/B,UAAAgC,EAAA7B,EAAAmC,EAAA,eAAAjC,MAAA2B,EAAAhB,cAAA,IAAAb,EAAA6B,EAAA,eAAA3B,MAAA0B,EAAAf,cAAA,IAAAe,EAAA0C,YAAA3D,EAAAkB,EAAApB,EAAA,qBAAAhB,EAAA8E,oBAAA,SAAA7E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAA8E,YAAA,QAAA/E,IAAAA,IAAAmC,GAAA,uBAAAnC,EAAA6E,aAAA7E,EAAAjC,MAAA,EAAAiC,EAAAgF,KAAA,SAAA/E,GAAA,OAAAE,OAAA8E,eAAA9E,OAAA8E,eAAAhF,EAAAmC,IAAAnC,EAAAiF,UAAA9C,EAAAlB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAkB,GAAAzC,CAAA,EAAAD,EAAAmF,MAAA,SAAAlF,GAAA,OAAAgD,QAAAhD,EAAA,EAAA0C,EAAAG,EAAA1C,WAAAc,EAAA4B,EAAA1C,UAAAU,GAAA,0BAAAd,EAAA8C,cAAAA,EAAA9C,EAAAoF,MAAA,SAAAnF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA2E,SAAA,IAAAzE,EAAA,IAAAkC,EAAAxB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAA8E,oBAAA5E,GAAAU,EAAAA,EAAAoD,OAAAd,MAAA,SAAAjD,GAAA,OAAAA,EAAAoD,KAAApD,EAAAQ,MAAAG,EAAAoD,MAAA,KAAArB,EAAAD,GAAAxB,EAAAwB,EAAA1B,EAAA,aAAAE,EAAAwB,EAAA9B,GAAA,0BAAAM,EAAAwB,EAAA,qDAAA1C,EAAAsF,KAAA,SAAArF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAsE,KAAAnE,GAAA,OAAAH,EAAAqF,UAAA,SAAAvB,IAAA,KAAA9D,EAAAvC,QAAA,KAAAsC,EAAAC,EAAAsF,MAAA,GAAAvF,KAAAD,EAAA,OAAAgE,EAAAvD,MAAAR,EAAA+D,EAAAX,MAAA,EAAAW,CAAA,QAAAA,EAAAX,MAAA,EAAAW,CAAA,GAAAhE,EAAAyC,OAAAA,EAAAhB,EAAArB,UAAA,CAAA2E,YAAAtD,EAAAkD,MAAA,SAAA3E,GAAA,QAAAyF,KAAA,OAAAzB,KAAA,OAAAP,KAAA,KAAAC,MAAAzD,EAAA,KAAAoD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAAzB,IAAA5B,EAAA,KAAAsE,WAAA3B,QAAA6B,IAAAzE,EAAA,QAAAE,KAAA,WAAAA,EAAAwF,OAAA,IAAArF,EAAAyB,KAAA,KAAA5B,KAAA0E,OAAA1E,EAAAyF,MAAA,WAAAzF,GAAAD,EAAA,EAAA5B,KAAA,gBAAAgF,MAAA,MAAApD,EAAA,KAAAsE,WAAA,GAAAG,WAAA,aAAAzE,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAA+D,IAAA,EAAAjC,kBAAA,SAAA3D,GAAA,QAAAqD,KAAA,MAAArD,EAAA,IAAAE,EAAA,cAAA2F,EAAAxF,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA8D,KAAA3D,EAAAE,IAAAL,EAAAoD,OAAA,OAAApD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAgE,WAAA5G,OAAA,EAAA4C,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA6D,WAAAhE,GAAAK,EAAAF,EAAAgE,WAAA,YAAAhE,EAAAyD,OAAA,OAAA0B,EAAA,UAAAnF,EAAAyD,QAAA,KAAAsB,KAAA,KAAA3E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAAyE,KAAA/E,EAAA0D,SAAA,OAAAyB,EAAAnF,EAAA0D,UAAA,WAAAqB,KAAA/E,EAAA2D,WAAA,OAAAwB,EAAAnF,EAAA2D,WAAA,SAAAvD,GAAA,QAAA2E,KAAA/E,EAAA0D,SAAA,OAAAyB,EAAAnF,EAAA0D,UAAA,YAAApD,EAAA,UAAAoC,MAAA,kDAAAqC,KAAA/E,EAAA2D,WAAA,OAAAwB,EAAAnF,EAAA2D,WAAA,KAAAT,OAAA,SAAA3D,EAAAD,GAAA,QAAAE,EAAA,KAAAqE,WAAA5G,OAAA,EAAAuC,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAgE,WAAArE,GAAA,GAAAK,EAAA4D,QAAA,KAAAsB,MAAApF,EAAAyB,KAAAvB,EAAA,oBAAAkF,KAAAlF,EAAA8D,WAAA,KAAA3D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAAyD,QAAAnE,GAAAA,GAAAU,EAAA2D,aAAA3D,EAAA,UAAAE,EAAAF,EAAAA,EAAAgE,WAAA,UAAA9D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA4C,OAAA,YAAAU,KAAAtD,EAAA2D,WAAAnC,GAAA,KAAA4D,SAAAlF,EAAA,EAAAkF,SAAA,SAAA7F,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAoC,KAAA/D,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAgE,KAAA,KAAA/D,IAAA5B,EAAA4B,IAAA,KAAAyB,OAAA,cAAAU,KAAA,kBAAA/D,EAAA2B,MAAA5B,IAAA,KAAAgE,KAAAhE,GAAAkC,CAAA,EAAA6D,OAAA,SAAA9F,GAAA,QAAAD,EAAA,KAAAuE,WAAA5G,OAAA,EAAAqC,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAqE,WAAAvE,GAAA,GAAAE,EAAAmE,aAAApE,EAAA,YAAA6F,SAAA5F,EAAAwE,WAAAxE,EAAAoE,UAAAG,EAAAvE,GAAAgC,CAAA,GAAA8D,MAAA,SAAA/F,GAAA,QAAAD,EAAA,KAAAuE,WAAA5G,OAAA,EAAAqC,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAqE,WAAAvE,GAAA,GAAAE,EAAAiE,SAAAlE,EAAA,KAAAI,EAAAH,EAAAwE,WAAA,aAAArE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA4C,EAAAvE,EAAA,QAAAK,CAAA,YAAA6C,MAAA,0BAAA6C,cAAA,SAAAjG,EAAAE,EAAAG,GAAA,YAAAkD,SAAA,CAAA1C,SAAA4B,EAAAzC,GAAA+D,WAAA7D,EAAA+D,QAAA5D,GAAA,cAAAiD,SAAA,KAAAzB,IAAA5B,GAAAiC,CAAA,GAAAlC,CAAA,CAQA,IA4FA,GA5FqB,WACnB,IAAAkG,GAAwCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7C1M,EAAY4M,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAsDJ,EAAAA,EAAAA,UAAS,CAC7DtK,QAAS,6BACTE,YAAa,SACbyK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAHK7M,EAAmB8M,EAAA,GAAEC,EAAsBD,EAAA,GAIlDE,GAAkCP,EAAAA,EAAAA,WAAS,GAAMQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACtBG,GAAYC,EAAAA,EAAAA,MAAZD,QACF3H,GAAWU,EAAAA,EAAAA,MA+DjB,OA7DAmH,EAAAA,EAAAA,YAAU,WACRH,GAAa,GAEb,IAAMI,EAAa,IAAIC,gBAEO,SAAAC,IAa7B,OAb6BA,GAAAC,EAAAA,EAAAA,GAAArH,KAAAiF,MAA9B,SAAAqC,IAAA,IAAAC,EAAA,OAAAvH,KAAAuB,MAAA,SAAAiG,GAAA,cAAAA,EAAA9B,KAAA8B,EAAAvD,MAAA,cAAAuD,EAAA9B,KAAA,EAAA8B,EAAAvD,KAAA,GAEuBwD,EAAAA,EAAAA,IAAkBV,EAAS,GAAIG,GAAY,KAAD,EAAvDK,EAAIC,EAAA9D,KAEV6C,EAAgBgB,GAAMC,EAAAvD,KAAA,gBAAAuD,EAAA9B,KAAA,EAAA8B,EAAAE,GAAAF,EAAA,SAEH,iBAAfA,EAAAE,GAAMC,OACRC,EAAAA,GAAAA,SACAA,EAAAA,GAAAA,MAAY,wDACb,QAEmB,OAFnBJ,EAAA9B,KAAA,GAEDoB,GAAa,GAAOU,EAAAxB,OAAA,6BAAAwB,EAAAlJ,OAAA,GAAAgJ,EAAA,yBAEvBO,MAAA,KAAAC,UAAA,CAID,OAnByC,WAEXV,EAAAS,MAAC,KAADC,UAAA,CAe9BC,GAEO,WACLb,EAAWc,QACXJ,EAAAA,GAAAA,QACF,CACF,GAAG,CAACb,KAEJE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBAEgB,SAAAc,IAoBtC,OApBsCA,GAAAZ,EAAAA,EAAAA,GAAArH,KAAAiF,MAAvC,SAAAiD,IAAA,IAAAX,EAAAY,EAAAC,EAAAC,EAAA,OAAArI,KAAAuB,MAAA,SAAA+G,GAAA,cAAAA,EAAA5C,KAAA4C,EAAArE,MAAA,cAAAqE,EAAA5C,KAAA,EAAA4C,EAAArE,KAAA,GAEuBsE,EAAAA,EAAAA,IAAarB,GAAY,KAAD,EAAjC,IAAJK,EAAIe,EAAA5E,MAEA8E,OAAO,CAADF,EAAArE,KAAA,eAAAqE,EAAAzE,OAAA,iBAAAsE,EAImBZ,EAAKiB,OAAhCJ,EAAQD,EAARC,SAAUC,EAAYF,EAAZE,aAElB3B,EAAuB,CACrB5K,QAASsM,EACTpM,YAAaqM,IACZC,EAAArE,KAAA,iBAAAqE,EAAA5C,KAAA,GAAA4C,EAAAZ,GAAAY,EAAA,SAEgB,iBAAfA,EAAAZ,GAAMC,OACRC,EAAAA,GAAAA,SACAA,EAAAA,GAAAA,MAAY,wDACb,yBAAAU,EAAAhK,OAAA,GAAA4J,EAAA,oBAEJL,MAAA,KAAAC,UAAA,CAID,OA1ByC,WAEFG,EAAAJ,MAAC,KAADC,UAAA,CAsBvCW,GAEO,WACLvB,EAAWc,QACXJ,EAAAA,GAAAA,QACF,CACF,GAAG,KAGDzK,EAAAA,EAAAA,KAAA,QAAAD,UACED,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACuC,EAAU,KAEXvC,EAAAA,EAAAA,KAAC7D,EAAU,CACTG,aAAcA,EACdE,oBAAqBA,KAEvBwD,EAAAA,EAAAA,KAAC+B,EAAoB,CAACE,SAAUA,EAASE,MAAMC,QAE/CpC,EAAAA,EAAAA,KAACuL,EAAAA,SAAQ,CAACC,UAAUxL,EAAAA,EAAAA,KAACyL,EAAAA,EAAM,CAACC,KAAK,iCAAkC3L,UACjEC,EAAAA,EAAAA,KAAC2L,EAAAA,GAAM,MAGRjC,IAAa1J,EAAAA,EAAAA,KAACyL,EAAAA,EAAM,CAACC,KAAK,qCAInC","sources":["components/MovieDescr/MovieDescr.styled.js","components/MovieDescr/MovieDescr.jsx","components/MovieDescrAdditional/MovieDescrAdditional.styled.js","components/MovieDescrAdditional/MovieDescrAdditional.jsx","components/ToBackLink/ToBackLink.styled.js","components/ToBackLink/ToBackLink.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Details = styled.div`\n  font-size: 18px;\n  line-height: 1.33;\n  letter-spacing: 0.36px;\n\n  color: var(--text-gray-color);\n\n  @media screen and (min-width: 1440px) {\n    font-size: 22px;\n    line-height: normal;\n    letter-spacing: 0.44px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 32px;\n\n    margin-bottom: 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    gap: 60px;\n  }\n`;\n\nexport const Poster = styled.img`\n  max-width: 342px;\n  border-radius: 8px;\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 16px;\n\n  font-size: 24px;\n  line-height: 1.17;\n  letter-spacing: 0.96px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 32px;\n    line-height: 1.19;\n    letter-spacing: 1.28px;\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const ListItem = styled.li`\n  font-weight: 700;\n\n  & ul {\n    @media screen and (min-width: 1440px) {\n      display: flex;\n      gap: 4px;\n    }\n  }\n`;\n\nexport const MovieLink = styled.a`\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n\n  font-weight: 700;\n\n  color: currentColor;\n\n  transition: color var(--transition-duration) var(--transition-timing-function);\n\n  &:is(:hover, :focus) {\n    color: var(--white-color);\n  }\n`;\n\nexport const DescrValue = styled.span`\n  font-weight: 400;\n`;\n\nexport const ListValues = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0 4px;\n\n  font-weight: 400;\n\n  & li:not(:last-child)::after {\n    content: ',';\n  }\n`;\n\nexport const Overview = styled.div`\n  margin-bottom: 16px;\n\n  font-weight: 700;\n\n  & p:first-child {\n    margin-bottom: 8px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 24px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport Rating from 'react-rating';\nimport { AiOutlineStar, AiTwotoneStar } from 'react-icons/ai';\nimport { FiExternalLink } from 'react-icons/fi';\nimport posterPlaceholder from '../../img/poster-placeholder.jpg';\nimport {\n  ListItem,\n  DescrValue,\n  Details,\n  Wrapper,\n  Poster,\n  Title,\n  List,\n  MovieLink,\n  Overview,\n  ListValues,\n} from './MovieDescr.styled';\n\nexport const MovieDescr = ({ movieDetails = {}, configurationImages = {} }) => {\n  const {\n    title = '',\n    overview = '',\n    poster_path = '',\n    original_title = '',\n    genres = [],\n    adult = false,\n    original_language = '',\n    homepage = '',\n    production_countries = [],\n    production_companies = [],\n    release_date,\n    runtime = '',\n    budget = '',\n    revenue = '',\n    popularity = 0,\n    vote_average = 0,\n    vote_count = 0,\n  } = movieDetails;\n  const { baseUrl = '', posterSizes = [] } = configurationImages;\n  const posterSize = posterSizes[3];\n  const date = new Date(release_date);\n  const releaseDate = date.toLocaleString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  });\n  const releaseYear = date.getFullYear() || null;\n  const posterSrc = poster_path\n    ? `${baseUrl}/${posterSize}/${poster_path}`\n    : posterPlaceholder;\n  const moviePopularity = popularity.toFixed(1);\n  const voteAverage = vote_average.toFixed(1);\n\n  return (\n    <Details>\n      <Title>\n        {title} {releaseYear && <span>({releaseYear})</span>}\n      </Title>\n\n      <Wrapper>\n        <Poster\n          src={posterSrc}\n          alt={`Poster for the movie ${title}`}\n          width={posterSize}\n          height={513}\n        />\n\n        <List>\n          <ListItem>\n            {homepage && (\n              <MovieLink\n                href={homepage}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Homepage <FiExternalLink />\n              </MovieLink>\n            )}\n          </ListItem>\n          <ListItem>\n            Original title: <DescrValue>{original_title}</DescrValue>\n          </ListItem>\n          {genres.length > 0 && (\n            <ListItem>\n              <p>Genres:</p>\n              <ListValues>\n                {genres.map(({ id, name }) => (\n                  <li key={id}>{name}</li>\n                ))}\n              </ListValues>\n            </ListItem>\n          )}\n          {runtime > 0 && (\n            <ListItem>\n              Runtime: <DescrValue>{runtime} minutes</DescrValue>\n            </ListItem>\n          )}\n          {adult && (\n            <ListItem>\n              Adult: <DescrValue>18+</DescrValue>\n            </ListItem>\n          )}\n          <ListItem>\n            Original language: <DescrValue>{original_language}</DescrValue>\n          </ListItem>\n          {releaseDate !== 'Invalid Date' && (\n            <ListItem>\n              Release date: <DescrValue>{releaseDate}</DescrValue>\n            </ListItem>\n          )}\n          {production_countries.length > 0 && (\n            <ListItem>\n              <p>Production countries:</p>\n              <ListValues>\n                {production_countries.map(({ iso_3166_1, name }) => (\n                  <li key={iso_3166_1}>{name}</li>\n                ))}\n              </ListValues>\n            </ListItem>\n          )}\n          {production_companies.length > 0 && (\n            <ListItem>\n              <p>Production companies:</p>\n              <ListValues>\n                {production_companies.map(({ id, name }) => (\n                  <li key={id}>{name}</li>\n                ))}\n              </ListValues>\n            </ListItem>\n          )}\n          {budget > 0 && (\n            <ListItem>\n              Budget: <DescrValue>${budget}</DescrValue>\n            </ListItem>\n          )}\n          {revenue > 0 && (\n            <ListItem>\n              Revenue: <DescrValue>${revenue}</DescrValue>\n            </ListItem>\n          )}\n          <ListItem>\n            Popularity: <DescrValue>{moviePopularity}</DescrValue>\n          </ListItem>\n          <ListItem>\n            Vote average: <DescrValue>{voteAverage}</DescrValue>\n          </ListItem>\n          <ListItem>\n            Vote count: <DescrValue>{vote_count}</DescrValue>\n          </ListItem>\n          <ListItem>\n            <Rating\n              readonly={true}\n              stop={10}\n              initialRating={vote_average}\n              emptySymbol={\n                <AiOutlineStar color=\"var(--gold-color)\" size={32} />\n              }\n              fullSymbol={<AiTwotoneStar color=\"var(--gold-color)\" size={32} />}\n            />\n          </ListItem>\n        </List>\n      </Wrapper>\n\n      {overview && (\n        <Overview>\n          <p>Overview</p>\n          <DescrValue>{overview}</DescrValue>\n        </Overview>\n      )}\n    </Details>\n  );\n};\n\nMovieDescr.propTypes = {\n  movieDetails: PropTypes.object.isRequired,\n  configurationImages: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  margin-bottom: 16px;\n\n  font-size: 18px;\n  line-height: 1.33;\n  letter-spacing: 0.36px;\n\n  color: var(--text-gray-color);\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 22px;\n    line-height: normal;\n    letter-spacing: 0.44px;\n  }\n`;\n\nexport const Title = styled.p`\n  margin-bottom: 16px;\n\n  font-weight: 700;\n`;\n\nexport const Links = styled.ul`\n  display: flex;\n`;\n\nexport const LinksItem = styled.li`\n  &:first-child a {\n    border-radius: 8px 0px 0px 8px;\n  }\n\n  &:last-child a {\n    border-radius: 0px 8px 8px 0px;\n  }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  min-width: 160px;\n  padding: 4px 8px;\n  border: 2px solid var(--black-color);\n\n  color: var(--black-color);\n  background-color: var(--gray-color);\n  outline: 2px solid transparent;\n\n  transition: background-color var(--transition-duration)\n      var(--transition-timing-function),\n    border-color var(--transition-duration) var(--transition-timing-function),\n    outline var(--transition-duration) var(--transition-timing-function);\n\n  @media screen and (min-width: 768px) {\n    min-width: 180px;\n  }\n\n  &:is(:hover, :focus),\n  &.active {\n    background-color: var(--white-color);\n    border-color: var(--black-color);\n    outline-color: var(--white-color);\n  }\n`;\n","import {\n  Links,\n  LinksItem,\n  StyledNavLink,\n  Title,\n  Wrapper,\n} from './MovieDescrAdditional.styled';\n\nexport const MovieDescrAdditional = ({ location = {} }) => {\n  return (\n    <Wrapper>\n      <Title>Additional information</Title>\n\n      <Links>\n        <LinksItem>\n          <StyledNavLink to=\"cast\" state={{ from: location }}>\n            Show the cast\n          </StyledNavLink>\n        </LinksItem>\n        <LinksItem>\n          <StyledNavLink to=\"reviews\" state={{ from: location }}>\n            Show reviews\n          </StyledNavLink>\n        </LinksItem>\n      </Links>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  position: relative;\n\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n\n  padding: 4px;\n  margin-bottom: 16px;\n\n  font-size: 18px;\n  line-height: 1.33;\n  letter-spacing: 0.36px;\n\n  color: currentColor;\n\n  transition: color var(--transition-duration) var(--transition-timing-function);\n\n  &:is(:hover, :focus) {\n    color: var(--white-color);\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    transform: scaleX(0);\n    transform-origin: center;\n\n    display: block;\n    width: 100%;\n    height: 1.5px;\n\n    background-color: currentColor;\n\n    transition: transform var(--transition-duration)\n      var(--transition-timing-function);\n  }\n\n  &:is(:hover, :focus)::after {\n    transform: scaleX(1);\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 24px;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { BiArrowBack } from 'react-icons/bi';\nimport { StyledLink } from './ToBackLink.styled';\n\nexport const ToBackLink = () => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <StyledLink to={backLinkHref}>\n      <BiArrowBack size={20} /> Back to movies\n    </StyledLink>\n  );\n};\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport { fetchDetails, fetchMovieDetails } from 'components/services/api';\nimport { MovieDescr } from 'components/MovieDescr/MovieDescr';\nimport { MovieDescrAdditional } from 'components/MovieDescrAdditional/MovieDescrAdditional';\nimport { ToBackLink } from 'components/ToBackLink/ToBackLink';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState({});\n  const [configurationImages, setConfigurationImages] = useState({\n    baseUrl: 'http://image.tmdb.org/t/p/',\n    posterSizes: 'w342',\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const controller = new AbortController();\n\n    async function getMovieDetails() {\n      try {\n        const data = await fetchMovieDetails(movieId, '', controller);\n\n        setMovieDetails(data);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          toast.remove();\n          toast.error('Oops, something went wrong. Try reloading the page.');\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getMovieDetails();\n\n    return () => {\n      controller.abort();\n      toast.remove();\n    };\n  }, [movieId]);\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    async function fetchConfigurationImages() {\n      try {\n        const data = await fetchDetails(controller);\n\n        if (!data.images) {\n          return;\n        }\n\n        const { base_url, poster_sizes } = data.images;\n\n        setConfigurationImages({\n          baseUrl: base_url,\n          posterSizes: poster_sizes,\n        });\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          toast.remove();\n          toast.error('Oops, something went wrong. Try reloading the page.');\n        }\n      }\n    }\n\n    fetchConfigurationImages();\n\n    return () => {\n      controller.abort();\n      toast.remove();\n    };\n  }, []);\n\n  return (\n    <main>\n      <div>\n        <ToBackLink />\n\n        <MovieDescr\n          movieDetails={movieDetails}\n          configurationImages={configurationImages}\n        />\n        <MovieDescrAdditional location={location.state.from} />\n\n        <Suspense fallback={<Loader text=\"Loading data, please wait...\" />}>\n          <Outlet />\n        </Suspense>\n\n        {isLoading && <Loader text=\"Loading data, please wait...\" />}\n      </div>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Details","styled","_templateObject","_taggedTemplateLiteral","Wrapper","_templateObject2","Poster","_templateObject3","Title","_templateObject4","List","_templateObject5","ListItem","_templateObject6","MovieLink","_templateObject7","DescrValue","_templateObject8","ListValues","_templateObject9","Overview","_templateObject10","MovieDescr","_ref","_ref$movieDetails","movieDetails","_ref$configurationIma","configurationImages","_movieDetails$title","title","_movieDetails$overvie","overview","_movieDetails$poster_","poster_path","_movieDetails$origina","original_title","_movieDetails$genres","genres","_movieDetails$adult","adult","_movieDetails$origina2","original_language","_movieDetails$homepag","homepage","_movieDetails$product","production_countries","_movieDetails$product2","production_companies","release_date","_movieDetails$runtime","runtime","_movieDetails$budget","budget","_movieDetails$revenue","revenue","_movieDetails$popular","popularity","_movieDetails$vote_av","vote_average","_movieDetails$vote_co","vote_count","_configurationImages$","baseUrl","_configurationImages$2","posterSizes","posterSize","date","Date","releaseDate","toLocaleString","year","month","day","releaseYear","getFullYear","posterSrc","concat","posterPlaceholder","moviePopularity","toFixed","voteAverage","_jsxs","children","_jsx","src","alt","width","height","href","target","rel","FiExternalLink","length","map","_ref2","id","name","_ref3","iso_3166_1","_ref4","Rating","readonly","stop","initialRating","emptySymbol","AiOutlineStar","color","size","fullSymbol","AiTwotoneStar","Links","LinksItem","StyledNavLink","NavLink","MovieDescrAdditional","_ref$location","location","to","state","from","StyledLink","Link","ToBackLink","_location$state$from","_location$state","backLinkHref","useLocation","BiArrowBack","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","rval","handle","complete","finish","catch","delegateYield","_useState","useState","_useState2","_slicedToArray","setMovieDetails","_useState3","_useState4","setConfigurationImages","_useState5","_useState6","isLoading","setIsLoading","movieId","useParams","useEffect","controller","AbortController","_getMovieDetails","_asyncToGenerator","_callee","data","_context","fetchMovieDetails","t0","code","toast","apply","arguments","getMovieDetails","abort","_fetchConfigurationImages","_callee2","_data$images","base_url","poster_sizes","_context2","fetchDetails","images","fetchConfigurationImages","Suspense","fallback","Loader","text","Outlet"],"sourceRoot":""}